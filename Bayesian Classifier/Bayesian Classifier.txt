from sklearn.naive_bayes import GaussianNB
from sklearn.naive_bayes import MultinomialNB
from sklearn.naive_bayes import BernoulliNB
from sklearn import datasets
from sklearn.model_selection import train_test_split
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
%matplotlib inline

iris=datasets.load_iris()
X=iris.data
y=iris.target
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3)


高斯貝式分類器(Gaussian Naive Bayes)
主要用於特徵為連續變數並符合符合常態分佈時

GNB=GaussianNB()
GNB.fit(X_train,y_train)
GNB.predict(X_test)

print('Training Score:',GNB.score(X_train,y_train))
print('Test Score:',GNB.score(X_test,y_test))


多項式貝式分類器(Multinomial Naive Bayes)
主要用在特徵為離散變數的情況(次數、類別)

MNB=MultinomialNB()   #在不設定的情況下，α預設為1.0(α為平滑處理)
MNB.fit(X_train,y_train)
MNB.predict(X_test)

print('Training Score:',MNB.score(X_train,y_train))
print('Test Score:',MNB.score(X_test,y_test))


伯努力貝氏分類器(Bernoulli Naive Bayes)
也適用於離散特徵的狀況，但不同的是伯努力模型的特徵取值只能是1和0的二元特徵


BNB=BernoulliNB()   
BNB.fit(X_train,y_train)
print(BNB.predict(X_test)) #給連續型資料，所預測出來的結果都是同一種特徵

print('BNB Training Score:',BNB.score(X_train,y_train))
print('BNB Test Score:',BNB.score(X_test,y_test))


BNB_bin=BernoulliNB(binarize=1)  #若給連續型或是離散型非二元的資料，預測出來的值都是同樣的，可以添加binarize參數，給定基準點，if=1表示特徵值小於1一類，大於1的一類
BNB_bin.fit(X_train,y_train)
print(BNB_bin.predict(X_test))

print('BNB_bin Training Score:',BNB_bin.score(X_train,y_train))
print('BNB_bin Test Score:',BNB_bin.score(X_test,y_test))


#在binarize參數可以根據樣本描述進行相關數值設定如，(binarize=[5.8,3,4.35,1.3]) 指在第一個特徵中<5.8為一類，>5.8為一類；第二特徵中<3為一類，>3為一類
X=pd.DataFrame(X)
X.describe()












