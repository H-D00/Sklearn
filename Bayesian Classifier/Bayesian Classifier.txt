from sklearn.naive_bayes import GaussianNB
from sklearn.naive_bayes import MultinomialNB
from sklearn.naive_bayes import BernoulliNB
from sklearn import datasets
from sklearn.model_selection import train_test_split
import numpy as np
import pandas as pd

iris=datasets.load_iris()
X=iris.data
y=iris.target
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3)


高斯貝式分類器(Gaussian Naive Bayes)

GNB=GaussianNB()
GNB.fit(X_train,y_train)
GNB.predict(X_test)
print('Training Score:',GNB.score(X_train,y_train))
print('Test Score:',GNB.score(X_test,y_test))


多項式貝式分類器(Multinomial Naive Bayes)

MNB=MultinomialNB()  
MNB.fit(X_train,y_train)
MNB.predict(X_test)
print('Training Score:',MNB.score(X_train,y_train))
print('Test Score:',MNB.score(X_test,y_test))


伯努力貝氏分類器(Bernoulli Naive Bayes)

BNB=BernoulliNB()   
BNB.fit(X_train,y_train)
print(BNB.predict(X_test))
print('BNB Training Score:',BNB.score(X_train,y_train))
print('BNB Test Score:',BNB.score(X_test,y_test))


BNB_bin=BernoulliNB(binarize=1)  
BNB_bin.fit(X_train,y_train)
print(BNB_bin.predict(X_test))
print('BNB_bin Training Score:',BNB_bin.score(X_train,y_train))
print('BNB_bin Test Score:',BNB_bin.score(X_test,y_test))
