# -*- coding: utf-8 -*-
"""decision tree.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Qd47UyGnuXU3F_M3ABViPFLpPylW3WiE
"""

from sklearn import tree
from sklearn import datasets
from sklearn.datasets import load_wine
import pydotplus              #了解樹的分類作法

wine=load_wine()
X=wine.data
y=wine.target

clf=tree.DecisionTreeClassifier(criterion='entropy').fit(X,y)  #決策樹分類樹/entropy不確定性量度 =0最好，=1最亂、無序


#決策樹模型輸出
dot_data=tree.export_graphviz(clf,out_file=None)
graph=pydotplus.graph_from_dot_data(dot_data)
graph.write_pdf('wine.pdf')

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3)
clf=tree.DecisionTreeClassifier(criterion='entropy').fit(X_train,y_train)
print(clf.predict(X_test))    #查看預測出來的特徵值
print(clf.score(X_train,y_train))
print(clf.score(X_test,y_test))

"""處理配適度的方法"""

#限制樹的發展，將原本的5層樹變成三層
clf=tree.DecisionTreeClassifier(criterion='entropy',max_depth=3).fit(X_train,y_train)  
print(clf.predict(X_test))
print(clf.score(X_train,y_train))
print(clf.score(X_test,y_test))
dot_data=tree.export_graphviz(clf,out_file=None)
graph=pydotplus.graph_from_dot_data(dot_data)
graph.write_pdf('wine_ent_max3.pdf')


#使用gini
clf=tree.DecisionTreeClassifier(criterion='gini',max_depth=3).fit(X_train,y_train)
print(clf.predict(X_test))
print(clf.score(X_train,y_train))
print(clf.score(X_test,y_test))
dot_data=tree.export_graphviz(clf,out_file=None)
graph=pydotplus.graph_from_dot_data(dot_data)
graph.write_pdf('wine_gini_max3.pdf')