from sklearn.neighbors import KNeighborsClassifier
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn import datasets
from sklearn.model_selection import train_test_split
from sklearn import metrics

digits=datasets.load_digits()   
X=digits.data
y=digits.target
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3,random_state=0)

KNN=KNeighborsClassifier(n_neighbors=5,p=2,weights='distance',algorithm='brute')
KNN.fit(X_train,y_train)
print(KNN.predict(X_test))
print(KNN.score(X_test,y_test))
print(KNN.score(X_train,y_train))

#如何尋找最適合的K值

a=[]
print(len(X_train))
for k in range(1,100):
  knn=KNeighborsClassifier(n_neighbors=k)
  knn.fit(X_train,y_train)
  y_pred=knn.predict(X_test)
  a.append(metrics.accuracy_score(y_test,y_pred))
  print("n_neighbor:",k,"準確率:",metrics.accuracy_score(y_test, y_pred))

k_range=range(1,100)
plt.plot(k_range,a)
plt.show()
