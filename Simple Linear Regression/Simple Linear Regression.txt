import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn import linear_model
from sklearn.preprocessing import PolynomialFeatures
from sklearn.pipeline import make_pipeline
from sklearn.datasets import make_regression
from sklearn.model_selection import train_test_split

X,y=make_regression(n_samples=100,n_features=1,noise=20)  
#plt.scatter(X,y)

X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3,random_state=0)
regr=linear_model.LinearRegression()
regr.fit(X_train,y_train)
#plt.scatter(X_train,y_train,color='black') #看訓練集真實資料的樣子
plt.scatter(X_test,y_test,color='red') #看測試集真實資料的樣子
#plt.scatter(X_test,regr.predict(X_test),color='blue')  #看模型對測試集預測表現如何
plt.plot(X_test,regr.predict(X_test),color='blue',linewidth=1)  #將預測出來的畫成線性表示
plt.show()

wi=regr.intercept_  #線的截距
wf=regr.coef_       #線的係數
print('截距:',wi)
print('係數:',wf)

print(regr.score(X_train,y_train))
print(regr.score(X_test,y_test))

#make_regression建立隨機資料(如果有實際資料的話，就不用設定)；n_sample樣本數；n_features特徵數(自變量數)
#"noise"通常指的是誤差項或殘差項，它表示因某些未知因素而未能被模型捕捉到的影響因素，導致模型預測與實際觀察值之間存在差異。
#噪聲越小表示模型的預測能力越強，噪聲越大表示模型的預測能力越弱。
#在回歸模型中，通常使用均方誤差（Mean Squared Error，MSE）或均方根誤差（Root Mean Squared Error，RMSE）等指標來衡量模型的噪聲大小。